{"version":3,"file":"static/js/563.99b3a7b4.chunk.js","mappings":"gKACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA0I,wBAA1I,EAA6K,0BAA7K,EAAiN,yB,mBCUjN,EARmB,SAACA,GAEhB,OACI,gBAAKC,UAAWC,EAAW,IAAMA,EAAjC,UACI,SAAC,KAAD,CAASC,GAAI,YAAcH,EAAMI,GAAIH,UAAW,gBAAGI,EAAH,EAAGA,SAAH,MAA0B,UAARA,EAAcH,EAAgBA,IAAhG,SAA8GF,EAAMM,UCGhI,EANoB,SAACN,GACjB,OACI,iBAAKC,UAAWC,EAAhB,cAA6BF,EAAMO,S,wCC8C3C,EA5CgB,SAACP,GAEb,IAAIQ,EAAkBR,EAAMS,aAAaC,WAAWC,KAAK,SAAAC,GAAC,OAAK,SAAC,EAAD,CAAYN,KAAMM,EAAEN,KAAMF,GAAIQ,EAAER,IAASQ,EAAER,OACtGS,EAAkBb,EAAMS,aAAaK,YAAYH,KAAK,SAAAI,GAAC,OAAO,SAAC,EAAD,CAAaR,KAAQQ,EAAEC,SAAcD,EAAEX,OAWzG,OACI,iBAAKH,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKM,KAEL,iBAAKP,UAAWC,EAAhB,UACKW,GACD,SAAC,KAAD,CACII,cAAe,CAACC,aAAc,IAC9BC,iBAAkBC,EAAAA,EAClBC,SAlBW,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cAClCC,YAAW,WACPC,MAAMC,KAAKC,UAAUL,EAAQ,KAAM,IACnCtB,EAAM4B,YAAYN,GAClBC,GAAc,KACf,MAUK,SAKK,gBAAEM,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,QAAxB,OACG,UAAC,KAAD,CAAM9B,UAAW8B,EAAQb,cAAgBY,EAAOZ,aAAec,EAAAA,EAAAA,MAAe,GAA9E,WACI,0BACI,SAAC,KAAD,CAAOC,UAAU,WAAW3B,KAAK,eAAe4B,YAAa,0BAEjE,SAAC,KAAD,CAAc5B,KAAK,eAAe2B,UAAU,SAC5C,mBAAQE,KAAK,SAASC,SAAUP,EAAhC,+B,oBCd5B,GAAeQ,E,QAAAA,KACXC,EAAAA,EAAAA,KAhBmB,SAACC,GACpB,MAAO,CACH9B,aAAc8B,EAAMC,iBAKH,SAACC,GACtB,MAAO,CACHb,YAAa,SAACN,GACVmB,GAASC,EAAAA,EAAAA,GAAmBpB,EAAOJ,oBAO3CyB,EAAAA,EAFJ,CAGEC,I,kCC3BIxB,EAAiByB,EAAAA,KAAaC,MAAM,CACtC5B,aAAc2B,EAAAA,KAETE,IAAI,EAAG,oCAEPC,IAAI,GAAI,+CACRC,SAAS,cAElB,O,iJCNIC,EAAkB,SAACX,GAAD,MAAY,CAC9BY,OAAQZ,EAAMa,KAAKD,SAEVR,EAAmB,SAACU,GAAe,IAEtCC,EAFqC,0IAIvC,WACI,OAAKC,KAAKvD,MAAMmD,QACR,SAACE,GAAD,UAAeE,KAAKvD,SADI,SAAC,KAAD,CAAUG,GAAG,eALV,GAEXqD,EAAAA,WAShC,OAAOlB,EAAAA,EAAAA,IAAQY,EAARZ,CAAyBgB","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/FormValidation/FieldsSchema.js","components/HOC/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__0LlIc\",\"dialogsItems\":\"Dialogs_dialogsItems__cRsn9\",\"dialog\":\"Dialogs_dialog__Pg7kB\",\"active\":\"Dialogs_active__JSzJD\",\"messages\":\"Dialogs_messages__DGmKI\",\"message\":\"Dialogs_message__sL2w2\",\"textarea_send\":\"Dialogs_textarea_send__VQ70c\"};","import s from '../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={\"/dialogs/\" + props.id} className={({ isActive }) => isActive ? `${s.active}` : `${s.dialog}`} >{props.name}</NavLink>\r\n        </div>)\r\n}\r\n\r\nexport default DialogItem","import s from '../Dialogs.module.css'\r\n\r\n\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div className={s.message}> {props.text}</div>\r\n    )\r\n}\r\n\r\nexport default MessageItem","import s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageItem from \"./Messages/Messages\";\r\nimport React from \"react\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport TextareaSchema from \"../FormValidation/FieldsSchema.js\";\r\nimport styles from \"../FormsControl/FormControl.module.css\"\r\n\r\nconst Dialogs = (props) => {     // Компонента\r\n\r\n    let dialogElements =  props.stateDialogs.dialogData.map( d =>  <DialogItem name={d.name} id={d.id} key={d.id}/>)\r\n    let messageElements = props.stateDialogs.messageData.map( m =>    <MessageItem text = {m.message} key={m.id}/>)\r\n\r\n\r\n    const onSendMessageClick = (values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n            alert(JSON.stringify(values, null, 2))\r\n            props.sendMessage(values);\r\n            setSubmitting(false)\r\n        }, 400)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messageElements}\r\n                <Formik\r\n                    initialValues={{textareaBody: ''}}\r\n                    validationSchema={TextareaSchema}\r\n                    onSubmit={onSendMessageClick}\r\n                >\r\n                    {({isSubmitting, errors, touched}) => (\r\n                        <Form className={touched.textareaBody && errors.textareaBody ? styles.error : \"\"}>\r\n                            <div>\r\n                                <Field component=\"textarea\" name=\"textareaBody\" placeholder={'Enter your message'}/>\r\n                            </div>\r\n                            <ErrorMessage name=\"textareaBody\" component=\"div\"/>\r\n                            <button type=\"submit\" disabled={isSubmitting}>\r\n                                Send\r\n                            </button>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs","\r\n\r\nimport {sendMessageCreator, updateMessageBodyCreator} from \"../../redux/messages-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {WithAuthRedirect} from \"../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\n\r\nlet mapsStateToProps = (state/*уже взят state из store connect-oм*/) => {\r\n    return {\r\n        stateDialogs: state.messagesPage,\r\n\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (values) => {\r\n            dispatch(sendMessageCreator(values.textareaBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapsStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect\r\n)(Dialogs);","import * as Yup from \"yup\";\r\n\r\nconst TextareaSchema = Yup.object().shape({\r\n    textareaBody: Yup.string()\r\n        //минимальная длина - 2 символа\r\n        .min(2, \"Must be longer than 2 characters\")\r\n        //максимальная длина - 20 символов\r\n        .max(30, \"Nice try, nobody has a first name that long\")\r\n        .required(\"Required\")\r\n});\r\nexport default TextareaSchema;","import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport const WithAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render() {\r\n            if (!this.props.isAuth) return (<Navigate to='/login'/>)\r\n            return (<Component {...this.props} />)\r\n        }\r\n    }\r\n\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}\r\n\r\n\r\n\r\n"],"names":["props","className","s","to","id","isActive","name","text","dialogElements","stateDialogs","dialogData","map","d","messageElements","messageData","m","message","initialValues","textareaBody","validationSchema","TextareaSchema","onSubmit","values","setSubmitting","setTimeout","alert","JSON","stringify","sendMessage","isSubmitting","errors","touched","styles","component","placeholder","type","disabled","compose","connect","state","messagesPage","dispatch","sendMessageCreator","WithAuthRedirect","Dialogs","Yup","shape","min","max","required","mapStateToProps","isAuth","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}