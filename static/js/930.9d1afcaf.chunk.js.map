{"version":3,"file":"static/js/930.9d1afcaf.chunk.js","mappings":"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","sources":["components/FormValidation/FieldsSchema.js","components/HOC/withAuthRedirect.js","webpack://my-app/./src/components/Profile/Profile.module.css?b512","webpack://my-app/./src/components/Profile/Posts/Post.module.css?045a","components/Profile/Posts/Post.jsx","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["import * as Yup from \"yup\";\r\n\r\nconst TextareaSchema = Yup.object().shape({\r\n    textareaBody: Yup.string()\r\n        //минимальная длина - 2 символа\r\n        .min(2, \"Must be longer than 2 characters\")\r\n        //максимальная длина - 20 символов\r\n        .max(30, \"Nice try, nobody has a first name that long\")\r\n        .required(\"Required\")\r\n});\r\nexport default TextareaSchema;","import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport const WithAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render() {\r\n            if (!this.props.isAuth) return (<Navigate to='/login'/>)\r\n            return (<Component {...this.props} />)\r\n        }\r\n    }\r\n\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__6F2qF\",\"avatar\":\"Profile_avatar__Y73P7\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Rzy0r\"};","import s from './Post.module.css'\r\n\r\nconst Post = (props) => {     // Компонента\r\n    return (\r\n        <div >\r\n               <div className={s.item}>\r\n                    <img src=\"https://img.freepik.com/free-vector/businessman-character-avatar-isolated_24877-60111.jpg?size=338&ext=jpg&ga=GA1.2.1615777823.1638921600\" alt=\"\"/>\r\n                   {props.message}\r\n                    <div>\r\n                        <span>like</span> { props.likes }\r\n                    </div>\r\n\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"ProfileInfo_avatar__A5Afb\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n       setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n /*    componentDidUpdate(prevProps, prevState, snapshot)\r\n    {\r\n\r\n        if (this.props.status !== prevProps.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }*/\r\n\r\n        return (\r\n            <div>\r\n                {!editMode ?\r\n                    <div>\r\n                        <span onDoubleClick={activateEditMode}>{status}</span>\r\n                    </div> :\r\n                    <div>\r\n                        <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                               value={status}/>\r\n                    </div>}\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks","import s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader\";\r\nimport ava from '../../../assets/ava.png'\r\nimport React from \"react\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nclass MyPost extends React.Component {\r\n    photo\r\n    check() {\r\n        if (!this.props.profile){\r\n            return <Preloader />\r\n        }\r\n\r\n        this.photo = this.props.profile.photos.large;\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                {this.check()}\r\n                <div className={s.avatar}>\r\n                    <img src={ this.photo === null ? ava : this.photo} alt=\"\"/>\r\n                    <div className={'Information'}>\r\n\r\n                        Ava + photo\r\n                    </div>\r\n\r\n                </div>\r\n               <ProfileStatusWithHooks status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyPost","import s from './Profile.module.css'\r\nimport Post from \"./Posts/Post\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport React from \"react\";\r\n\r\nimport styles from \"../FormsControl/FormControl.module.css\";\r\nimport TextareaSchema from \"../FormValidation/FieldsSchema\";\r\n\r\n\r\nconst Profile = ({stateProfile,addPostActionCreator,profile, status, updateStatus}) => {     // Компонента\r\n\r\n    let postItems = stateProfile.postData.map( post =>   <Post message={post.message} likes ={post.likes} key={post.id} />)\r\n\r\n    const onAddPost = (values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n            alert(JSON.stringify(values, null, 2))\r\n            addPostActionCreator(values.textareaBody);\r\n            setSubmitting(false)\r\n        }, 400)\r\n    }\r\n    return (\r\n        <div className={s.profile}>\r\n           <ProfileInfo profile={profile} status={status} updateStatus={updateStatus}/>\r\n\r\n            <Formik\r\n                initialValues={{ textareaBody: '', withBlur: ''}}\r\n                validationSchema={TextareaSchema}\r\n                onSubmit={onAddPost}\r\n            >\r\n                {({ isSubmitting, touched, errors, handleBlur }) => (\r\n                    <Form className={touched.textareaBody &&  errors.textareaBody? styles.error : \"\"}>\r\n                        <div>\r\n                            <Field component='textarea'  name=\"textareaBody\" placeholder={'Write your post..'} />\r\n                        </div>\r\n                            <ErrorMessage name=\"textareaBody\" component=\"div\"/>\r\n\r\n                        <button type=\"submit\" disabled={isSubmitting}>\r\n                            Send\r\n                        </button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n            {postItems}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile","\r\nimport React from \"react\";\r\nimport {\r\n    addPostActionCreator,\r\n    getProfileThunkCreator,\r\n    getStatusThunk, updateStatusThunk\r\n} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport { useLocation,useParams} from \"react-router-dom\";\r\nimport {WithAuthRedirect} from \"../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport Profile from \"./Profile\";\r\n\r\n// wrapper to use react router's v6 hooks in class component(to use HOC pattern, like in router v5)\r\n export function withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{location, params, navigator}}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let profileId = this.props.router.params.userId;\r\n        if (!profileId){\r\n            profileId = this.props.authUserId\r\n            if (!profileId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getProfileThunkCreator(profileId);\r\n        this.props.getStatusThunk(profileId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={!this.props.status ? 'nothing' : this.props.status}\r\n                     updateStatus={this.props.updateStatusThunk}/>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    stateProfile: state.profilePage,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfileThunkCreator, addPostActionCreator, getStatusThunk, updateStatusThunk}),\r\n    withRouter,\r\n    WithAuthRedirect\r\n)(ProfileContainer)"],"names":["TextareaSchema","Yup","shape","textareaBody","min","max","required","mapStateToProps","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","className","s","src","alt","message","likes","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","onDoubleClick","MyPost","profile","Preloader","photo","photos","large","check","ava","stateProfile","addPostActionCreator","postItems","postData","map","post","id","ProfileInfo","initialValues","withBlur","validationSchema","onSubmit","values","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting","touched","errors","handleBlur","styles","component","name","placeholder","type","disabled","withRouter","location","useLocation","params","useParams","router","navigator","ProfileContainer","profileId","userId","authUserId","history","push","getProfileThunkCreator","getStatusThunk","updateStatusThunk","compose","profilePage"],"sourceRoot":""}